<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ReviewsMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Reviews">
    <id column="REVIEW_ID" jdbcType="INTEGER" property="reviewId" />
    <result column="REVIEW_DATE" jdbcType="DATE" property="reviewDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.demo.entity.Reviews">
    <result column="CONTENT" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    REVIEW_ID, REVIEW_DATE
  </sql>
  <sql id="Blob_Column_List">
    CONTENT
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reviews
    where REVIEW_ID = #{reviewId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reviews
    where REVIEW_ID = #{reviewId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Reviews">
    insert into reviews (REVIEW_ID, REVIEW_DATE, CONTENT
      )
    values (#{reviewId,jdbcType=INTEGER}, #{reviewDate,jdbcType=DATE}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Reviews">
    insert into reviews
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        REVIEW_ID,
      </if>
      <if test="reviewDate != null">
        REVIEW_DATE,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        #{reviewId,jdbcType=INTEGER},
      </if>
      <if test="reviewDate != null">
        #{reviewDate,jdbcType=DATE},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Reviews">
    update reviews
    <set>
      <if test="reviewDate != null">
        REVIEW_DATE = #{reviewDate,jdbcType=DATE},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where REVIEW_ID = #{reviewId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.entity.Reviews">
    update reviews
    set REVIEW_DATE = #{reviewDate,jdbcType=DATE},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where REVIEW_ID = #{reviewId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Reviews">
    update reviews
    set REVIEW_DATE = #{reviewDate,jdbcType=DATE}
    where REVIEW_ID = #{reviewId,jdbcType=INTEGER}
  </update>
  <select id="getLastInsertReviewId" resultType="Integer">
    select MAX(REVIEW_ID) FROM REVIEWS;
  </select>
</mapper>