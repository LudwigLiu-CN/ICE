<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.WriteReviewMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.WriteReview">
    <id column="REVIEW_ID" jdbcType="INTEGER" property="reviewId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    REVIEW_ID, USER_ID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from write_review
    where REVIEW_ID = #{reviewId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from write_review
    where REVIEW_ID = #{reviewId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.WriteReview">
    insert into write_review (REVIEW_ID, USER_ID)
    values (#{reviewId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.WriteReview">
    insert into write_review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        REVIEW_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        #{reviewId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.WriteReview">
    update write_review
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where REVIEW_ID = #{reviewId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.WriteReview">
    update write_review
    set USER_ID = #{userId,jdbcType=INTEGER}
    where REVIEW_ID = #{reviewId,jdbcType=INTEGER}
  </update>

  <select id="getWhetherCommented" resultType="Integer">
  select count(*) from write_review inner join has_review
      on write_review.review_id=has_review.review_id
    where user_id = #{userId} and game_id = #{gameId}
  </select>

    <select id="selectAllComment" resultType="com.example.demo.entity.ReviewsDetailed">
        select user_id,content
        from reviews inner join write_review inner join has_review
                on reviews.REVIEW_ID=write_review.review_id
                   and write_review.REVIEW_ID=has_review.review_id
        where  GAME_ID=#{gameId}
        order by reviews.REVIEW_ID
        <if test="reverse>0">desc</if>
        <if test="!reverse>0">asc</if>
        limit #{number}

    </select>
</mapper>